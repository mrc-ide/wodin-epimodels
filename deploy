#!/usr/bin/env bash
set -ex

NETWORK=epimodels
APP_BRANCH=mrc-3681
API_BRANCH=main

docker rm --force redis odin.api wodin-msc-idm-2022 proxy 2> /dev/null || /bin/true
docker network create $NETWORK 2> /dev/null || /bin/true
docker volume create redis-docker

docker pull mrcide/odin.api:$API_BRANCH
docker pull mrcide/wodin:$APP_BRANCH

# Shared:
docker run -d --name redis -v redis-data:/data --network=$NETWORK redis:6
docker run -d --name odin.api --network=$NETWORK \
       mrcide/odin.api:$API_BRANCH

# One per app
docker run -d --name wodin-msc-idm-2022 --network=$NETWORK \
       -v $PWD/config/msc-idm-2022:/wodin/config:ro \
       mrcide/wodin:$APP_BRANCH

# Shared, but we need the app up and running already. We'll rewrite
# this to be more general with a different proxy container soon...
docker run -d --network $NETWORK --name proxy \
       -p 80:80 -p 443:443 \
       mrcide/proxy-wodin-epimodels:latest
docker cp ssl/certificate.pem proxy:/run/proxy/
docker cp ssl/key.pem proxy:/run/proxy/
